<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - VVulpes</title>
        <link>https://b1ankc-mov.github.io/posts/</link>
        <description>所有文章 | VVulpes</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>VVulpes@163.com (Vulpes)</managingEditor>
            <webMaster>VVulpes@163.com (Vulpes)</webMaster><lastBuildDate>Wed, 06 Mar 2024 15:07:37 &#43;0800</lastBuildDate><atom:link href="https://b1ankc-mov.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>TDengine时序数据库时间戳(timestamp)字段插入数据的实现方法</title>
    <link>https://b1ankc-mov.github.io/posts/tdengine_timestamp/</link>
    <pubDate>Wed, 06 Mar 2024 15:07:37 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/tdengine_timestamp/</guid>
    <description><![CDATA[<h2 id="实体类">实体类</h2>
<p>定义实体类，插入数据分别代表<code>打卡时间</code>、<code>员工id</code>，</p>
<p>打卡时间最后需要插入时序数据库中的<strong>时间戳类型字段</strong>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">Daily</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">collect_time</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">id</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>在VS code中打开VS studio的cpp文件并调试运行（弹出独立窗口）</title>
    <link>https://b1ankc-mov.github.io/posts/vsstudio_vscode/</link>
    <pubDate>Wed, 06 Mar 2024 08:44:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/vsstudio_vscode/</guid>
    <description><![CDATA[<p>在电脑上复现以前的C++项目的时候，自觉VS studio太繁重，准备重新拿VS code编译，没想到还是有很多地方需要注意的，在这里记录一下。</p>
<h2 id="安装扩展">安装扩展</h2>
<p>为了编译打开C++文件，需要在VS code上面先安装一些拓展，如下图：</p>
<p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/B1ANKC-MOV/HttpImg@master/20240306/VSCODE4.19r4f0j3lfmo.webp" title="安装的扩展" data-thumbnail="https://cdn.jsdelivr.net/gh/B1ANKC-MOV/HttpImg@master/20240306/VSCODE4.19r4f0j3lfmo.webp" data-sub-html="<h2> </h2><p>安装的扩展</p>">
        
    </a><figcaption class="image-caption">安装的扩展</figcaption>
    </figure></p>]]></description>
</item>
<item>
    <title>【Java全栈学习】十九、Springboot&#43;Vue云端环境部署(阿里云服务器部署项目)</title>
    <link>https://b1ankc-mov.github.io/posts/springbootvuep20/</link>
    <pubDate>Mon, 15 Jan 2024 11:10:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/springbootvuep20/</guid>
    <description><![CDATA[<div class="details admonition example open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-list-ol fa-fw" aria-hidden="true"></i>注意<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>在部署前后端项目之前，首先需要保证nginx服务是开启的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">systemctl start nginx <span class="c1">#开启nginx服务</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>接着将服务器的公网IP地址粘到浏览器中，如果能看见如下界面，说明nginx可以访问。(这个访问的是80端口，需要保证安全组的80端口是开启的)</p>
<p>
<figure><a class="lightgallery" href="https://cdn.jsdelivr.net/gh/B1ANKC-MOV/HttpImg@master/20240116/COS1.755p8emc61c0.webp" title="nginx成功界面" data-thumbnail="https://cdn.jsdelivr.net/gh/B1ANKC-MOV/HttpImg@master/20240116/COS1.755p8emc61c0.webp" data-sub-html="<h2> </h2><p>nginx成功界面</p>">
        
    </a><figcaption class="image-caption">nginx成功界面</figcaption>
    </figure></p>
</div>
        </div>
    </div>]]></description>
</item>
<item>
    <title>【Java全栈学习】十八、Springboot&#43;Vue云端环境配置(阿里云服务器环境配置)</title>
    <link>https://b1ankc-mov.github.io/posts/springbootvuep19/</link>
    <pubDate>Fri, 12 Jan 2024 13:55:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/springbootvuep19/</guid>
    <description><![CDATA[<h2 id="云端环境准备">云端环境准备</h2>
<div class="details admonition example open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-list-ol fa-fw" aria-hidden="true"></i>注意<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">以下部署基于Centos7 系统环境</div>
        </div>
    </div>]]></description>
</item>
<item>
    <title>[FF14] 维埃拉族·普通约拍册(横屏专辑·下)</title>
    <link>https://b1ankc-mov.github.io/posts/ff14hpic1/</link>
    <pubDate>Fri, 12 Jan 2024 09:47:03 &#43;0800</pubDate>
    <author>小极</author>
    <guid>https://b1ankc-mov.github.io/posts/ff14hpic1/</guid>
    <description><![CDATA[这个劳斯打光简直神迹🔮！这一次约拍是黑白幻化专场，每张分三版：白框、调色、原片。]]></description>
</item>
<item>
    <title>[FF14] 维埃拉族·普通约拍册(横屏专辑·上)</title>
    <link>https://b1ankc-mov.github.io/posts/ff14hpic/</link>
    <pubDate>Fri, 12 Jan 2024 09:37:03 &#43;0800</pubDate>
    <author>小极</author>
    <guid>https://b1ankc-mov.github.io/posts/ff14hpic/</guid>
    <description><![CDATA[这个劳斯打光简直神迹🔮！这一次约拍是黑白幻化专场，每张分三版：白框、调色、原片。]]></description>
</item>
<item>
    <title>[FF14] 维埃拉族·普通约拍册(竖屏专辑)</title>
    <link>https://b1ankc-mov.github.io/posts/ff14spic/</link>
    <pubDate>Fri, 12 Jan 2024 08:01:09 &#43;0800</pubDate>
    <author>小极</author>
    <guid>https://b1ankc-mov.github.io/posts/ff14spic/</guid>
    <description><![CDATA[这个劳斯打光简直神迹🔮！这一次约拍是黑白幻化专场，每张分三版：白框、调色、原片。]]></description>
</item>
<item>
    <title>【Java全栈学习】十七、阿里云服务器的配置&amp;搭建&amp;购买&amp;使用</title>
    <link>https://b1ankc-mov.github.io/posts/springbootvuep18/</link>
    <pubDate>Thu, 11 Jan 2024 15:46:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/springbootvuep18/</guid>
    <description><![CDATA[<h2 id="云服务器介绍">云服务器介绍</h2>
<h3 id="云服务器概念">云服务器概念</h3>
<ul>
<li>云服务器(Elastic Compute Service, ECS)是一种简单高效、安全可靠、处理能力可弹性伸缩的计算服务。其管理方式比物理服务器更简单高效。</li>
<li>用户无需提前购买硬件，即可迅速创建或释放任意多台云服务器。</li>
</ul>]]></description>
</item>
<item>
    <title>【Java全栈学习】十六、SpringBoot&#43;vue-element-template(前后端集成)</title>
    <link>https://b1ankc-mov.github.io/posts/springbootvuep17/</link>
    <pubDate>Thu, 11 Jan 2024 13:44:38 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/springbootvuep17/</guid>
    <description><![CDATA[将后台管理模板与项目前端进行集成，简单修改前端API接口与后端相连。]]></description>
</item>
<item>
    <title>【Java全栈学习】十五、JWT跨域认证</title>
    <link>https://b1ankc-mov.github.io/posts/springbootp16/</link>
    <pubDate>Thu, 11 Jan 2024 10:16:27 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/springbootp16/</guid>
    <description><![CDATA[<h2 id="session认证">Session认证</h2>
<p>互联网服务离不开用户认证。一般流程是下面这样：</p>
<ol>
<li>
<p>用户向服务器发送用户名和密码。</p>
</li>
<li>
<p>服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等。</p>
</li>
<li>
<p>服务器向用户返回一个 session_id，写入用户的 Cookie。</p>
</li>
<li>
<p>用户随后的每一次请求，都会通过 Cookie，将 session_id 传回服务器。</p>
</li>
<li>
<p>服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。</p>
</li>
</ol>]]></description>
</item>
</channel>
</rss>
