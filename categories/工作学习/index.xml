<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>工作学习 - 分类 - VVulpes</title>
        <link>https://b1ankc-mov.github.io/categories/%E5%B7%A5%E4%BD%9C%E5%AD%A6%E4%B9%A0/</link>
        <description>工作学习 - 分类 - VVulpes</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>VVulpes@163.com (Vulpes)</managingEditor>
            <webMaster>VVulpes@163.com (Vulpes)</webMaster><lastBuildDate>Wed, 17 Apr 2024 11:33:17 &#43;0800</lastBuildDate><atom:link href="https://b1ankc-mov.github.io/categories/%E5%B7%A5%E4%BD%9C%E5%AD%A6%E4%B9%A0/" rel="self" type="application/rss+xml" /><item>
    <title>[MQTT]服务器EMQX搭建SSL/TLS连接过程（wss://)</title>
    <link>https://b1ankc-mov.github.io/posts/emqx_mqtt_ssl_wss/</link>
    <pubDate>Wed, 17 Apr 2024 11:33:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/emqx_mqtt_ssl_wss/</guid>
    <description><![CDATA[<div class="details admonition example open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-list-ol fa-fw" aria-hidden="true"></i>注意<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>本文采用<strong>8084端口</strong>进行连接，是EMQX 默认提供了四个常用的监听器之一，如果需要添加其他类型的监听器，可参考官方文档🔗<a href="https://www.emqx.io/docs/zh/latest/dashboard/configuration.html#%e7%ae%a1%e7%90%86" target="_blank" rel="noopener noreffer ">管理 | EMQX 文档</a>。</p>
<p>本文使用<strong>自签名CA</strong>，需要提前在Linux系统上安装🔗<a href="https://www.openssl.org/" target="_blank" rel="noopener noreffer ">OpenSSL</a>，具体安装教程请自行搜索。</p>
<p>本文采用<strong>SSL/TLS连接</strong>，需要提前在EMQX上启用，可参考🔗<a href="https://www.emqx.io/docs/zh/latest/network/emqx-mqtt-tls.html#%e5%bc%80%e5%90%af-ssl-tls-%e8%bf%9e%e6%8e%a5" target="_blank" rel="noopener noreffer ">开启 SSL/TLS 连接| EMQX 文档</a></p>
</div>
        </div>
    </div>
<h2 id="使用openssl获取证书">使用OpenSSL获取证书</h2>
<h3 id="ca文件">CA文件</h3>
<ol>
<li>打开<strong>Linux系统</strong>终端操作窗口，输入以下指令，查看<strong>OpenSSL是否安装</strong>，如果有，则会显示版本信息。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">openssl version
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>生成私钥：<code>my_root_ca.key</code></li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">openssl genrsa -out my_root_ca.key <span class="m">2048</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>使用该密钥生成根（CA）证书：<code>my_root_ca.pem</code></li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">openssl req -x509 -new -nodes -key my_root_ca.key -sha256 -days <span class="m">3650</span> -out my_root_ca.pem
</span></span></code></pre></td></tr></table>
</div>
</div><p>系统会提示以下信息，对应含义如下（根据下面的内容填就可以了，#后面的不需要填）：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">You are about to be asked to enter information that will be incorporated
</span></span><span class="line"><span class="cl">into your certificate request.
</span></span><span class="line"><span class="cl">What you are about to enter is what is called a Distinguished Name or a DN.
</span></span><span class="line"><span class="cl">There are quite a few fields but you can leave some blank
</span></span><span class="line"><span class="cl">For some fields there will be a default value,
</span></span><span class="line"><span class="cl">If you enter <span class="s1">&#39;.&#39;</span>, the field will be left blank.
</span></span><span class="line"><span class="cl">-----
</span></span><span class="line"><span class="cl">Country Name <span class="o">(</span><span class="m">2</span> letter code<span class="o">)</span> <span class="o">[</span>AU<span class="o">]</span>: CN# 国家/地区
</span></span><span class="line"><span class="cl">State or Province Name <span class="o">(</span>full name<span class="o">)</span> <span class="o">[</span>Some-State<span class="o">]</span>:Zhejiang <span class="c1"># 省/市</span>
</span></span><span class="line"><span class="cl">Locality Name <span class="o">(</span>eg, city<span class="o">)</span> <span class="o">[]</span>:Hangzhou <span class="c1"># 城市</span>
</span></span><span class="line"><span class="cl">Organization Name <span class="o">(</span>eg, company<span class="o">)</span> <span class="o">[</span>Internet Widgits Pty Ltd<span class="o">]</span>:EMQX <span class="c1"># 组织机构（或公司名），如 EMQ</span>
</span></span><span class="line"><span class="cl">Organizational Unit Name <span class="o">(</span>eg, section<span class="o">)</span> <span class="o">[]</span>:EMQX <span class="c1"># 机构部门，如 EMQX</span>
</span></span><span class="line"><span class="cl">Common Name <span class="o">(</span>e.g. server FQDN or YOUR name<span class="o">)</span> <span class="o">[]</span>:none <span class="c1"># 通用名称，此处应当设置为服务器域名如 mqtt.emqx.com</span>
</span></span><span class="line"><span class="cl">...
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>[Java] 从其他表中查出待存储的表名，并将数据插入该表的实现（跨数据库/数据库平台）</title>
    <link>https://b1ankc-mov.github.io/posts/tdengine_navicat/</link>
    <pubDate>Thu, 07 Mar 2024 08:56:20 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/tdengine_navicat/</guid>
    <description><![CDATA[<p>最后实现的功能大概为：根据传入的<code>person_id</code>，在存放数据位置信息的表中，筛选出数据要插入的表名（例如，person_id=1的数据，在<code>work_table_info</code>表中查出，需要存储在table_id_1表中），并将数据插入。</p>
<h2 id="实体类">实体类</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">Daily</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">time</span><span class="p">;</span><span class="w">	</span><span class="c1">//打卡时间</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Double</span><span class="w"> </span><span class="n">longitude</span><span class="p">;</span><span class="w">	</span><span class="c1">//打卡经纬度</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">Double</span><span class="w"> </span><span class="n">latitude</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">person_id</span><span class="p">;</span><span class="w">	</span><span class="c1">//打卡人员id</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>[Java] TDengine时序数据库时间戳(timestamp)字段插入数据的实现方法</title>
    <link>https://b1ankc-mov.github.io/posts/tdengine_timestamp/</link>
    <pubDate>Wed, 06 Mar 2024 15:07:37 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/tdengine_timestamp/</guid>
    <description><![CDATA[<h2 id="实体类">实体类</h2>
<p>定义实体类，插入数据分别代表<code>打卡时间</code>、<code>员工id</code>，</p>
<p>打卡时间是最后需要插入时序数据库中的<strong>时间戳类型字段</strong>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="nd">@Data</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="kd">public</span><span class="w"> </span><span class="kd">class</span> <span class="nc">Daily</span><span class="w"> </span><span class="p">{</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">collect_time</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="kd">private</span><span class="w"> </span><span class="n">String</span><span class="w"> </span><span class="n">id</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
<item>
    <title>[Java] Mybatis向Mysql插入主副表JSON数据</title>
    <link>https://b1ankc-mov.github.io/posts/mybatisplusmysql/</link>
    <pubDate>Mon, 08 Jan 2024 08:55:39 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://b1ankc-mov.github.io/posts/mybatisplusmysql/</guid>
    <description><![CDATA[<h2 id="创建主表实体类">创建主表实体类</h2>
<p>首先创建一个entity包下的主表实体类，这里命名为User。</p>
<p>代码如下：</p>]]></description>
</item>
</channel>
</rss>
